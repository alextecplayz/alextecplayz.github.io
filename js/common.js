var currentDate = new Date(); var bannerContainer = document.getElementById('bannerContainer');
  
document.addEventListener('DOMContentLoaded', function() {var headerLogo = document.getElementById('logo');var isScrollingDown = false;var logoStickyPosition = { top: 1.5 * 16, left: 4.5 * 16 };var scrollThreshold = headerLogo.offsetTop - logoStickyPosition.top;var isLogoSticky = false;var isInitialScroll = true;function handleScroll() {var scrollY = window.pageYOffset || document.documentElement.scrollTop;var currentScrollDown = scrollY > scrollThreshold;if (currentScrollDown !== isScrollingDown) {isScrollingDown = currentScrollDown;if (isScrollingDown) {headerLogo.classList.add('logo-sticky');isLogoSticky = true;} else {headerLogo.classList.remove('logo-sticky');isLogoSticky = false;}if (isScrollingDown) {headerLogo.style.transition = 'transform 0.15s ease-in-out';headerLogo.style.transform = 'translate(-95%, 0%)';} else {headerLogo.style.transition = 'transform 0.15s ease-in-out';headerLogo.style.transform = 'translate(0, 0)';}}if (!isScrollingDown && !isLogoSticky) {headerLogo.style.border = 'none';} else {headerLogo.style.border = '0.25rem solid var(--white)';}}function setInitialBorderWidths() {headerLogo.style.borderTopWidth = headerLogo.offsetHeight + 'px';headerLogo.style.borderRightWidth = headerLogo.offsetWidth + 'px';headerLogo.style.borderBottomWidth = headerLogo.offsetHeight + 'px';headerLogo.style.borderLeftWidth = headerLogo.offsetWidth + 'px';}window.addEventListener('load', function() {headerLogo.style.display = 'block';setInitialBorderWidths();isInitialScroll = false;});window.addEventListener('scroll', handleScroll);});

function lazyLoadImages() {const images = document.querySelectorAll('img[data-src]'); const observer = new IntersectionObserver((entries, observer) => {entries.forEach(entry => {if (entry.isIntersecting) {const image = entry.target; image.src = image.getAttribute('data-src'); observer.disconnect();}});});images.forEach(image => {observer.observe(image);});}document.addEventListener('DOMContentLoaded', () => {lazyLoadImages();});

const settingsButton = document.getElementById('settings-modal-opener'); const settingsWindow = document.getElementById('settings-window'); const settingsWindowClose = document.getElementById('settings-close-button'); function showSettingsWindow() {settingsWindow.style.display = 'flex';} function hideSettingsWindow() {settingsWindow.style.display = 'none';} settingsButton.addEventListener('click', showSettingsWindow); settingsWindowClose.addEventListener('click', hideSettingsWindow); const themeSelect = document.getElementById('setting_theme'); const useLocalStorageCheckbox = document.querySelector('.checkbox-container input'); function saveSettings() {const useLocalStorage = useLocalStorageCheckbox.checked;

const theme = themeSelect.value; if (useLocalStorage) {localStorage.setItem('theme', theme); localStorage.setItem('useLocalStorage', 'true');} else {sessionStorage.setItem('theme', theme); sessionStorage.setItem('useLocalStorage', 'false'); localStorage.removeItem('theme'); localStorage.removeItem('useLocalStorage');}} function loadSettings() {const useLocalStorage = localStorage.getItem('useLocalStorage') === 'true' || sessionStorage.getItem('useLocalStorage') === 'true'; const theme = localStorage.getItem('theme') || sessionStorage.getItem('theme'); if (useLocalStorage) {useLocalStorageCheckbox.checked = true;} else {useLocalStorageCheckbox.checked = false;} if (theme) {themeSelect.value = theme; updateTheme(theme);}} themeSelect.value = 'theme_dark'; loadSettings(); function updateTheme(theme) {const root = document.documentElement; switch (theme) {case 'theme_dark': root.style.setProperty('--black', '#000000'); root.style.setProperty('--darkgray', '#3a3a3a'); root.style.setProperty('--lightgray', '#c5c5c5'); root.style.setProperty('--white', '#ffffff'); root.style.setProperty('--brand', '#a0a0a0'); root.style.setProperty('--magenta', '#fcb5ff'); root.style.setProperty('--vantagray', '#242424'); root.style.setProperty('--warning', '#f8ff9c'); root.style.setProperty('--danger', '#ed333b'); root.style.setProperty('--caution', '#ff7800'); root.style.setProperty('--accent-color', '#dd8ac8'); break; case 'theme_light': root.style.setProperty('--black', '#ffffff'); root.style.setProperty('--darkgray', '#c5c5c5'); root.style.setProperty('--lightgray', '#3a3a3a'); root.style.setProperty('--white', '#000000'); root.style.setProperty('--brand', '#a0a0a0'); root.style.setProperty('--magenta', '#99099e'); root.style.setProperty('--vantagray', '#D4D4D4'); root.style.setProperty('--warning', '#f8ff9c'); root.style.setProperty('--danger', '#ed333b'); root.style.setProperty('--caution', '#ff7800'); root.style.setProperty('--accent-color', '#cc4fad'); break; case 'theme_black': root.style.setProperty('--black', '#000000'); root.style.setProperty('--darkgray', '#3a3a3a'); root.style.setProperty('--lightgray', '#c5c5c5'); root.style.setProperty('--white', '#ffffff'); root.style.setProperty('--brand', '#a0a0a0'); root.style.setProperty('--magenta', '#fcb5ff'); root.style.setProperty('--vantagray', '#000000'); root.style.setProperty('--warning', '#f8ff9c'); root.style.setProperty('--danger', '#ed333b'); root.style.setProperty('--caution', '#ff7800'); root.style.setProperty('--accent-color', '#dd8ac8'); break;}} themeSelect.addEventListener('change', () => {const theme = themeSelect.value; updateTheme(theme); saveSettings();}); useLocalStorageCheckbox.addEventListener('change', saveSettings); document.addEventListener('DOMContentLoaded', () => {loadSettings(); const theme = themeSelect.value; updateTheme(theme);});
